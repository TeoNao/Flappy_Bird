/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.*;
import java.util.Random;

import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author thaip
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        pnlBird = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblDiem = new javax.swing.JLabel();
        lblHuongDan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlBackground.setBackground(new java.awt.Color(102, 102, 102));
        pnlBackground.setPreferredSize(new java.awt.Dimension(1280, 720));
        pnlBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBird.setBackground(new java.awt.Color(255, 204, 51));
        pnlBird.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pnlBird.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 10, 10));

        jPanel2.setBackground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        pnlBird.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 25, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlBird.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 10, 30));

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        pnlBird.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, -1, -1));

        pnlBackground.add(pnlBird, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 60, 40));

        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setBorder(null);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        pnlBackground.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 720, 100, 0));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel1.setText("Điểm:");

        lblDiem.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDiem, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(lblDiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlBackground.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 0, 250, 30));

        lblHuongDan.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        lblHuongDan.setForeground(new java.awt.Color(255, 255, 255));
        lblHuongDan.setText("Ấn \"SPACE\" để bất đầu!");
        pnlBackground.add(lblHuongDan, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 280, -1, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            if (!end){
                this.birdUp();
                this.startGame();
            }
        }
    }//GEN-LAST:event_jTextField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblDiem;
    private javax.swing.JLabel lblHuongDan;
    private javax.swing.JPanel pnlBackground;
    private javax.swing.JPanel pnlBird;
    // End of variables declaration//GEN-END:variables

    private Thread thBirdDown;
    private Thread thread, thread1, thread2, thread3, thread4;
    private boolean th1 = false, th2 = false, th3 = false, th4 = false;
    private int yBrid = 0;
    private int corrent = 28;
    private int corrent1 = 0;
    private int diem = 0;
    private boolean start = false;
    private boolean end = false;
    private ThongKe tk = new ThongKe(this, true);

    private void init(){
        this.setLocationRelativeTo(null);
    }

    public void startGame() {
        if (!start){
            this.birdDown();
            this.startTru1();
            start = true;
            lblHuongDan.setVisible(false);
        }
    }
    Thread thEnd = new Thread(){
        public void run(){
            stopGame();
        }
    };
    private void birdDown() {
        thBirdDown = new Thread() {
            @Override
            public void run() {
                yBrid = 300;
                try {
                    for (; yBrid < 720; yBrid += 2) {
                        pnlBird.setLocation(100, yBrid);
                        Thread.sleep(corrent);
                        if (corrent > 1) {
                            corrent -= 3;
                        }
                        lblDiem.setText(diem+"");
                        if (yBrid <= 0 || yBrid >= 680){
                            thEnd.start();
                        }
                    }
                } catch (Exception e) {}
            }
        };
        thBirdDown.start();
    }

    private void birdUp() {
        try {
            //thBirdDown.suspend();
            thread = new Thread() {
                public void run() {
                    try {
                        int millis = 1;
                        for (int i = 0; i < 100; i += 2) {
                            yBrid -= 5;
                            pnlBird.setLocation(100, yBrid);
                            Thread.sleep(millis);
                            if (i == 40) {
                                millis++;
                            }
                        }
                        corrent = 25;
                        //thBirdDown.resume();
                        thread.stop();
                    } catch (Exception e) {
                    }
                }
            };
            thread.start();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private int random() {
        Random random = new Random();
        return random.nextInt(400);
    }

    private void startTru1() {
        thread1 = new Thread() {
            @Override
            public void run() {
                th1 = true;
                JPanel panelTop = new JPanel();
                JPanel panelBot = new JPanel();
                int heightTop = random();
                int y = 720 + (heightTop - 450);
                try {
                    pnlBackground.add(panelTop);
                } catch (Exception e) {}
                try {
                    pnlBackground.add(panelBot);
                } catch (Exception e) {}
                while (true) {
                    panelTop.setSize(80, heightTop);
                    panelBot.setSize(80, 720 - heightTop);
                    panelTop.setBackground(new Color(0,204,102));
                    panelBot.setBackground(new Color(0,204,102));
                    for (int x = 1280; x > -80; x--) {
                        panelTop.setLocation(x, 0);
                        panelBot.setLocation(x, y);
                        if (x == 950 && corrent1 < 3){
                            startTru2();
                            corrent1++;
                        }
                        if (x <= 160 && x >= 21){
                            if (yBrid <= heightTop || yBrid+40 >= y){
                                thEnd.start();
                            }
                        }
                        try {
                            Thread.sleep(2);
                        } catch (Exception e) {}
                    }
                    heightTop = random();
                    y = 720 + (heightTop - 450);
                    diem++;
                }
            }
        };
        thread1.start();
    }
    private void startTru2() {
        thread2 = new Thread() {
            @Override
            public void run() {
                th2 = true;
                JPanel panelTop = new JPanel();
                JPanel panelBot = new JPanel();
                int heightTop = random();
                int y = 720 + (heightTop - 450);
                try {
                    pnlBackground.add(panelTop);
                } catch (Exception e) {}
                try {
                    pnlBackground.add(panelBot);
                } catch (Exception e) {}
                while (true) {
                    panelTop.setSize(80, heightTop);
                    panelBot.setSize(80, 720 - heightTop);
                    panelTop.setBackground(new Color(0,204,102));
                    panelBot.setBackground(new Color(0,204,102));
                    for (int x = 1280; x > -80; x--) {
                        panelTop.setLocation(x, 0);
                        panelBot.setLocation(x, y);
                        if (x == 950 && corrent1 < 3){
                            startTru3();
                            corrent1++;
                        }
                        if (x <= 160 && x >= 21){
                            if (yBrid <= heightTop || yBrid+40 >= y){
                                thEnd.start();
                            }
                        }
                        try {
                            Thread.sleep(2);
                        } catch (Exception e) {}
                    }
                    heightTop = random();
                    y = 720 + (heightTop - 450);
                    diem++;
                }
            }
        };
        thread2.start();
    }
    private void startTru3() {
        thread3 = new Thread() {
            @Override
            public void run() {
                th3 = true;
                JPanel panelTop = new JPanel();
                JPanel panelBot = new JPanel();
                int heightTop = random();
                int y = 720 + (heightTop - 450);
                try {
                    pnlBackground.add(panelTop);
                } catch (Exception e) {}
                try {
                    pnlBackground.add(panelBot);
                } catch (Exception e) {}
                while (true) {
                    panelTop.setSize(80, heightTop);
                    panelBot.setSize(80, 720 - heightTop);
                    panelTop.setBackground(new Color(0,204,102));
                    panelBot.setBackground(new Color(0,204,102));
                    for (int x = 1280; x > -80; x--) {
                        panelTop.setLocation(x, 0);
                        panelBot.setLocation(x, y);
                        if (x == 950 && corrent1 < 3){
                            startTru4();
                            corrent1++;
                        }
                        if (x <= 160 && x >= 21){
                            if (yBrid <= heightTop || yBrid+40 >= y){
                                thEnd.start();
                            }
                        }
                        try {
                            Thread.sleep(2);
                        } catch (Exception e) {}
                    }
                    heightTop = random();
                    y = 720 + (heightTop - 450);
                    diem++;
                }
            }
        };
        thread3.start();
    }
    private void startTru4() {
        thread4 = new Thread() {
            @Override
            public void run() {
                th4 = true;
                JPanel panelTop = new JPanel();
                JPanel panelBot = new JPanel();
                int heightTop = random();
                int y = 720 + (heightTop - 450);
                try {
                    pnlBackground.add(panelTop);
                } catch (Exception e) {}
                try {
                    pnlBackground.add(panelBot);
                } catch (Exception e) {}
                while (true) {
                    panelTop.setSize(80, heightTop);
                    panelBot.setSize(80, 720 - heightTop);
                    panelTop.setBackground(new Color(0,204,102));
                    panelBot.setBackground(new Color(0,204,102));
                    for (int x = 1280; x > -80; x--) {
                        panelTop.setLocation(x, 0);
                        panelBot.setLocation(x, y);
                        if (x <= 160 && x >= 21){
                            
                            if (yBrid <= heightTop || yBrid+40 >= y){
                                thEnd.start();
                            }
                        }
                        try {
                            Thread.sleep(2);
                        } catch (Exception e) {}
                    }
                    heightTop = random();
                    y = 720 + (heightTop - 450);
                    diem++;
                }
            }
        };
        thread4.start();
    }

    private void stopGame(){
        end = true;
        thBirdDown.stop();
        if (th1){
            thread1.stop();
        }
        if (th2) {
            thread2.stop();
        }
        if (th3) {
            thread3.stop();
        }
        if (th4) {
            thread4.stop();
        }
        tk.setDiem(diem);
        tk.setVisible(true);  
    }

}
